type node
type quorum_a # >= n - t
type quorum_b # > (n + 3t) / 2
type quorum_c # > (n - t) / 2

relation member_emptyset(N:node)
relation member_universalset(N:node)
relation member_f(N:node)
relation member_a(N:node, Q:quorum_a)
relation member_b(N:node, Q:quorum_b)
relation member_c(N:node, Q:quorum_c)

axiom forall N:node. ~member_emptyset(N)
axiom forall N:node. member_universalset(N)

axiom ~(forall N:node. ~member_f(N) <-> member_emptyset(N))
axiom exists C:quorum_c. forall N:node. ~member_f(N) <-> member_c(N, C)
axiom forall A_B:quorum_a. ~(forall N:node. member_a(N, A_B) <-> member_emptyset(N))
axiom forall A_B:quorum_a. exists A:quorum_a. forall N:node. member_a(N, A_B) <-> member_a(N, A)
axiom forall A_B:quorum_a. exists C:quorum_c. forall N:node. member_a(N, A_B) <-> member_c(N, C)
axiom forall B_C:quorum_b. ~(forall N:node. member_b(N, B_C) <-> member_emptyset(N))
axiom forall B_C:quorum_b. exists B:quorum_b. forall N:node. member_b(N, B_C) <-> member_b(N, B)
axiom forall B_C:quorum_b. exists C:quorum_c. forall N:node. member_b(N, B_C) <-> member_c(N, C)
axiom forall C_D:quorum_c. ~(forall N:node. member_c(N, C_D) <-> member_emptyset(N))
axiom forall C_D:quorum_c. exists C:quorum_c. forall N:node. member_c(N, C_D) <-> member_c(N, C)
axiom forall A_E:quorum_a. exists C:quorum_c. forall N:node. member_a(N, A_E) & ~member_f(N) <-> member_c(N, C)
axiom forall B_F:quorum_b. exists C:quorum_c. forall N:node. member_b(N, B_F) & ~member_f(N) <-> member_c(N, C)
axiom forall A_I:quorum_a. forall A_H:quorum_a. ~(forall N:node. member_a(N, A_H) & member_a(N, A_I) <-> member_emptyset(N))
axiom forall A_I:quorum_a. forall A_H:quorum_a. exists C:quorum_c. forall N:node. member_a(N, A_H) & member_a(N, A_I) <-> member_c(N, C)
axiom forall A_K:quorum_a. forall B_J:quorum_b. ~(forall N:node. member_b(N, B_J) & member_a(N, A_K) <-> member_emptyset(N))
axiom forall A_K:quorum_a. forall B_J:quorum_b. exists C:quorum_c. forall N:node. member_b(N, B_J) & member_a(N, A_K) <-> member_c(N, C)
axiom forall A_M:quorum_a. forall C_L:quorum_c. ~(forall N:node. member_c(N, C_L) & member_a(N, A_M) <-> member_emptyset(N))
axiom forall B_O:quorum_b. forall B_N:quorum_b. ~(forall N:node. member_b(N, B_N) & member_b(N, B_O) <-> member_emptyset(N))
axiom forall B_Q:quorum_b. forall C_P:quorum_c. ~(forall N:node. member_c(N, C_P) & member_b(N, B_Q) <-> member_emptyset(N))
axiom forall A_U:quorum_a. forall A_T:quorum_a. ~(forall N:node. member_a(N, A_T) & member_a(N, A_U) & ~member_f(N) <-> member_emptyset(N))
axiom forall A_W:quorum_a. forall B_V:quorum_b. ~(forall N:node. member_b(N, B_V) & member_a(N, A_W) & ~member_f(N) <-> member_emptyset(N))
axiom forall A_BH:quorum_a. forall A_BG:quorum_a. forall A_BF:quorum_a. ~(forall N:node. member_a(N, A_BF) & member_a(N, A_BG) & member_a(N, A_BH) <-> member_emptyset(N))
axiom forall A_BK:quorum_a. forall A_BJ:quorum_a. forall B_BI:quorum_b. ~(forall N:node. member_b(N, B_BI) & member_a(N, A_BJ) & member_a(N, A_BK) <-> member_emptyset(N))
axiom forall A_BK:quorum_a. forall A_BJ:quorum_a. forall B_BI:quorum_b. exists C:quorum_c. forall N:node. member_b(N, B_BI) & member_a(N, A_BJ) & member_a(N, A_BK) <-> member_c(N, C)
axiom forall A_BQ:quorum_a. forall B_BP:quorum_b. forall B_BO:quorum_b. ~(forall N:node. member_b(N, B_BO) & member_b(N, B_BP) & member_a(N, A_BQ) <-> member_emptyset(N))
axiom forall A_BT:quorum_a. forall B_BS:quorum_b. forall C_BR:quorum_c. ~(forall N:node. member_c(N, C_BR) & member_b(N, B_BS) & member_a(N, A_BT) <-> member_emptyset(N))
axiom forall A_W:quorum_a. forall B_V:quorum_b. exists C:quorum_c. forall N:node. member_b(N, B_V) & member_a(N, A_W) & ~member_f(N) <-> member_c(N, C)
axiom forall B_BA:quorum_b. forall B_Z:quorum_b. ~(forall N:node. member_b(N, B_Z) & member_b(N, B_BA) & ~member_f(N) <-> member_emptyset(N))
axiom forall B_BC:quorum_b. forall C_BB:quorum_c. ~(forall N:node. member_c(N, C_BB) & member_b(N, B_BC) & ~member_f(N) <-> member_emptyset(N))
axiom forall B_F:quorum_b. ~(forall N:node. member_b(N, B_F) & ~member_f(N) <-> member_emptyset(N))
axiom forall C_G:quorum_c. ~(forall N:node. member_c(N, C_G) & ~member_f(N) <-> member_emptyset(N))
axiom forall A_E:quorum_a. ~(forall N:node. member_a(N, A_E) & ~member_f(N) <-> member_emptyset(N))
axiom exists A:quorum_a. forall N:node. ~member_f(N) <-> member_a(N, A)
